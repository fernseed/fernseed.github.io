/* Variables */

{% assign modular_scale_base1  = "1.0" %}
{% assign modular_scale_base2  = "1.5" %}
{% assign modular_scale_upper  = "4" %}
{% assign em_size              = "20" %}
{% assign article_size_in_ems  = "32" %}
{% assign aside_size_in_ems    = article_size_in_ems | divided_by:4 %}
{% assign max_headings         = "6" %}
{% assign monospace_size       = em_size | minus:3 %}
{% assign break_point          = article_size_in_ems | times:em_size %}
{% assign title_letter_spacing = modular_scale_base1 | divided_by:10 %}
{% assign title_word_spacing   = modular_scale_base2 | divided_by:10 %}

/* Includes */

{% unless page.layout == "index" %}
  {% include css/syntax.css %}
{% endunless %}

/* Imports */

@import 'bourbon/bourbon';

/* Mixins */

@mixin respond-to($breakpoint) {
  @media only screen and (max-width: $breakpoint + px) {
    @content;
  }
}

@mixin get-headings-all($from: 1, $to: {{ max_headings }}) {
  @for $i from $from through $to {
    h#{$i}{
      @content
    }
  }
}

@mixin get-headings-sub($from: 2, $to: {{ max_headings }}) {
  @for $i from $from through $to {
    h#{$i}{
      @content
    }
  }
}

@mixin set-headings-sizes($from: 1, $to: {{ max_headings }}) {
  @for $i from $from through $to {
    $modular-scale-font-size: ( {{ modular_scale_upper }} - $i);
    h#{$i} {
      font-size: modular-scale($modular-scale-font-size);
    }
  }
}

@mixin set-article-width() {
  width:     $width-article;
  max-width: $width-article-max;
}

@mixin set-aside-width() {
  width:     $width-aside;
  max-width: $width-aside-max;
}

@mixin set-body-text {
  @include hyphens(auto);
  @include font-feature-settings("liga", "kern");
  @include set-article-width();

  hyphenate-limit-lines: 2;
  -ms-hyphenate-limit-lines: 2;
  -webkit-hyphenate-limit-lines: 2;

  line-height: $size-medium;
  text-align:  justify;
}

/* Fonts */

@include font-face("Calendas Plus", "/assets/fonts/calendas_plus-webfont",        normal, normal, $file-formats: eot woff2 woff);
@include font-face("Calendas Plus", "/assets/fonts/calendas_plus_italic-webfont", normal, italic, $file-formats: eot woff2 woff);
@include font-face("Calendas Plus", "/assets/fonts/calendas_plus_bold-webfont",   bold,   normal, $file-formats: eot woff2 woff);

$em-base:           {{ em_size }}px;
$width-article:     {{ article_size_in_ems }}rem;
$width-aside:       {{ aside_size_in_ems }}rem;
$width-break-min:   {{ break_point }};

$width-article-max: 90%;
$width-aside-max:   90%;

$modular-scale-ratio: $golden;
$modular-scale-base: {{ modular_scale_base1 }}rem, {{ modular_scale_base2 }}rem;

$font-serif:     "Calendas Plus",   serif;
$font-sans:      "Source Sans Pro", sans-serif;
$font-mono:      "Source Code Pro", monospace;
$font-size-mono: {{ monospace_size }}px;

$transparency: 0.3;

$size-x-small: modular-scale( {{ modular_scale_upper | minus:6 }} );
$size-small:   modular-scale( {{ modular_scale_upper | minus:4 }} );
$size-medium:  modular-scale( {{ modular_scale_upper | minus:3 }} );
$size-large:   modular-scale( {{ modular_scale_upper | minus:2 }} );
$size-x-large: modular-scale( {{ modular_scale_upper | plus:2  }} );

/* Base styles */

@include get-headings-all(){
  font-family:    $font-sans;
  font-style:     normal;
  font-weight:    normal;
  text-align:     center;
  text-transform: uppercase;
  letter-spacing: {{ title_letter_spacing }}rem;
  word-spacing:   {{ title_word_spacing }}rem;
  max-width:      $width-article-max;
  margin:         0 auto;
  padding:        0;

  @extend %headings !optional;
}

@include set-headings-sizes();

html {
  font-size: $em-base;
}

body {
  text-rendering: optimizeLegibility;
  font-family:    $font-serif;
  font-weight:    normal;
  font-style:     normal;
  margin:         0;
  padding:        0;
  min-height:     100vh;
}

section {
  {% if page.layout == "index" %}
    margin-bottom: $size-x-large;
  {% else %}
    @include display(flex);
    @include flex-direction(row);
    @include justify-content(flex-start);
  {% endif %}
  max-width: 100vw;
}

section p, section blockquote {
  margin-top: $size-x-small;
}

header, footer {
  text-align: center;
  width: 100vw;
}

footer {
  margin-top: $size-x-large;
}

article {
  @include flex(2);
}

blockquote, p, dl, ul, ol {
  @include set-body-text();
  margin-top: $size-large;
  {% if page.aside %}
  @include flex(2);
  margin: 0 0 0 auto;
  {% else %}
  margin: 0 auto;
  {% endif %}
}

p + p {
  margin-top:  0;
  text-indent: $size-large;
}

dl {
  margin-bottom: $size-large;
}

dt {
  margin: $size-small 0 0 0;
}

blockquote {
  border-left: .25rem solid lightgrey;
  color:       grey;
  font-style:  italic;
}

/* TODO: Not entirely sure this is a good idea.
article > p:first-of-type:first-letter {
  float:       left;
  font-weight: normal;
  font-style:  normal;
  font-size:   {{ em_size | times:4 }}px;
  line-height: {{ em_size | times:3 }}px;
  padding:     $size-x-small;
  margin:      auto;
}
*/

aside {
  @include flex(1);
  @include align-self(center);
}

aside p {
  @include set-aside-width();
  font-style: italic;
  font-size:  $size-small;
  text-align: left;
  margin:     0 auto 0 $size-small;
}

em {
  font-style: italic;
}

strong {
  @include font-feature-settings("smcp");
  font-weight: normal;
}

p + :not(p), ul + :not(p), ol + :not(p) {
  margin-top: $size-large;
}

li p, li ol, li ul {
  margin-top:  0;
}

ol {
    counter-reset: item;
}

ol li {
    display: block;
}

ol li:before {
    content: counters(item, ".") ") "; counter-increment: item;
}

code, pre {
  font-family: $font-mono;
  font-size: $font-size-mono;
}

pre {
  padding: $size-small;
  max-width: 100vw;
  overflow: auto;
  {% if page.aside %}
  @include flex(3);
  {% endif %}
}

hr {
  margin: $size-large auto;
  border: 0;
}

a {
  text-decoration: none;
}

figure {
  padding: 0;
  margin: $size-large 0;
}

img {
  width:     100vw;
  max-width: 100vw;
}

{% for colour in site.colours %}

  $colour-{{ colour | first }}: rgb({{ colour | last }});

  .{{ colour | first }} a,
  .{{ colour | first }} %headings,
  .{{ colour | first }} aside {
    color: rgb({{ colour | last }});
  }

  .{{ colour | first }} path {
    fill: rgb({{ colour | last }});
  }

  .{{ colour | first }} a.unselected  {
    color: rgba({{ colour | last }}, $transparency);
  }

{% endfor %}

a,
%headings,
aside {
  color: {% if page.categories %}$colour-{{ page.categories | first }}{% else %}$colour-base{% endif %};
}

nav path {
  fill:  {% if page.categories %}$colour-{{ page.categories | first }}{% else %}$colour-base{% endif %};
}

/* Class styles */

.selected {
  border-style: none none solid none;
  border-width: 2px;
}

.selector {
  border-style: none none solid none;
  border-width: 0px;
  cursor: pointer;
}

.masthead {
  margin: $size-x-large;
}

.footnotes ol {
  counter-reset: footnote-item;
}

.footnotes ol li:before {
  font-style: italic;
  content: "Note " counters(footnote-item, ".") ": "; counter-increment: footnote-item;
}

.search {
  margin:         auto;
  font-family:    $font-sans;
  font-style:     normal;
  font-weight:    normal;
  text-align:     center;
  text-transform: uppercase;
  letter-spacing: {{ title_letter_spacing }}rem;
  word-spacing:   {{ title_word_spacing }}rem;
}

.tag-history ul li:before {
    float: left;
    width: 0;
    white-space: nowrap;
    content: "";
    list-style-type: none;
}

.tag-cloud ul {
    list-style: none;
    width: 90%;
    padding: 0;
    margin: auto;
    text-align: center
}

.tag-cloud li {
  font-family: $font-sans;
  font-style: normal;
  font-weight: normal;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: {{ title_letter_spacing }}rem;
  word-spacing:   {{ title_word_spacing }}rem;
  display: inline-block;
}

.tag-entry, .tag-entry-tags {
  display: none;
}

.disabled {
  color: lightgrey;
}

/* ID styles */

#search-input {
    text-align: center;
}

#search-results {
    margin-bottom: $size-x-large;
}

/* Responsive overrides */

@include respond-to($width-break-min) {

  h1, h2, h3 {
    font-size: $size-medium;
  }

  h4 {
    font-size: $size-small;
  }

  h5, h6 {
    font-size: $size-x-small;
  }

  p, ul, ol, blockquote {
    text-align: left;
  }

  section {
    @include flex-direction(column);
  }

  .masthead {
    margin: $size-small $size-small $size-x-large  $size-small;
  }

}
